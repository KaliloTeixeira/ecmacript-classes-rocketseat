
// 1.1 - Um por Segundo

// const delay = () => new Promise(resolve => setTimeout(resolve, 1000));

// async function umPorSegundo() {
//     await delay();
//     console.log('1s');

//     await delay();
//     console.log('2s');

//     await delay();
//     console.log('3s');
// }

// umPorSegundo();


// 1.2 - Buscar UsuÃ¡rio no Github
// import axios from 'axios';

// async function getUserFromGithub(username) {
//     try {
//         const user = await axios.get(`https://api.github.com/users/${username}`)

//         console.log(user.data);
//     } catch (error) {
//         console.warn('Erro na API!');
//     }
// }

// getUserFromGithub('kaliloteixeira');
// getUserFromGithub('kaliloteixeira123123');


// 1.3 - Buscar repositorios no Github
// import axios from 'axios';

// class Github {
//     static async getRepositories(username, repositorie) {
//         try {
//             const repositories = await axios.get(`https://api.github.com/repos/${username}/${repositorie}`);

//             console.log(repositories.data.name);
//         } catch (error) {
//             console.warn('Erro na Busca!');
//         }
//     }
// }

// Github.getRepositories('kaliloteixeira', 'desafio-icmc-jr');
// Github.getRepositories('kaliloteixeira', 'rocketseat/dslkvmskv');

//  1.4 - Buscar usuario e Async function armazenada direto na variavel
// import axios from 'axios';

// const searchUser = async user => {
//     try {
//         const response = await axios.get(`https://api.github.com/users/${user}`);
//         console.log(response.data);
//     } catch (error) {
//         console.log(error);
//     }

// }

// searchUser('kaliloteixeira')